replicaCount: 1

image:
  repository: bandirom/blog
  pullPolicy: IfNotPresent
  tag: "v1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: blog.chart.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolumeClaim:
  storageClassName: ""
  storageSize: 3Gi

postgresql:
  enabled: true
  auth:
    username: "blog-user"
    password: "blog-password"
    database: "blog-db"
    enablePostgresUser: true
    postgresPassword: "postgres-password"
  secret: false
  host: false


redis:
  enabled: true
  architecture: standalone
  # host: "redis://redis-master:6379"
  port: "6379"
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

project:
  secretKey: "abcEFG"
  postgresUser: "postgres"
  healthCheckUrl: "/application/health/"
  microserviceName: "Blog Microservice"

celery:
  args:
    - "celery"
    - "-A"
    - "src"
    - "worker"
    - "-l"
    - "info"
